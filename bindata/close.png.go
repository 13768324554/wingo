package bindata

import (
	"bytes"
	"compress/gzip"
	"io"
)

// ClosePng returns the decompressed binary data.
// It panics if an error occurred.
func ClosePng() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0xea,0x0c,
0xf0,0x73,0xe7,0xe5,0x92,0xe2,0x62,0x60,0x60,0xe0,0xf5,0xf4,
0x70,0x09,0x02,0xd2,0x0d,0x20,0xcc,0xc1,0x06,0x24,0x0f,0xdb,
0x25,0x9e,0x06,0x52,0x8c,0xc5,0x41,0xee,0x4e,0x0c,0xeb,0xce,
0xc9,0xbc,0x04,0x72,0xd8,0x92,0xbc,0xdd,0x5d,0x18,0xfe,0x83,
0xe0,0x82,0xbd,0xcb,0x27,0x03,0x45,0x38,0x0b,0x3c,0x22,0x8b,
0x19,0x18,0xb8,0x85,0x41,0x98,0x91,0x61,0xd6,0x1c,0x09,0xa0,
0x20,0x7b,0x89,0xa7,0xaf,0x2b,0xfb,0x1d,0x66,0x69,0x26,0x0e,
0x93,0xe6,0xca,0xb2,0x4c,0xa0,0x90,0x6c,0x66,0x48,0x44,0x89,
0x73,0x7e,0x6e,0x6e,0x6a,0x5e,0x09,0x03,0x08,0x38,0x17,0xa5,
0x26,0x96,0xa4,0xa6,0x28,0x94,0x67,0x96,0x64,0x28,0xb8,0x7b,
0xfa,0x06,0xa4,0xe8,0xa5,0xb2,0x33,0x30,0x30,0x6d,0xf2,0x74,
0x71,0x0c,0xa9,0xb8,0xf5,0xf6,0xce,0xc5,0xc0,0xc7,0x0e,0x02,
0x2d,0x0f,0xd9,0x9e,0xcd,0xe4,0x70,0x61,0x9a,0xc0,0xd0,0xf7,
0x40,0x49,0xc1,0xcb,0x68,0x07,0x8b,0x0f,0x93,0xcb,0x82,0x5e,
0x07,0xc1,0x0f,0x07,0x56,0xf9,0xed,0xc8,0xa9,0xd9,0xa4,0x53,
0x99,0xf6,0xfc,0xff,0xaa,0x98,0x36,0xa6,0x53,0x9b,0x4c,0xee,
0xb2,0x6d,0xd9,0xc4,0xc2,0x80,0x03,0x1c,0x58,0x6f,0xed,0x7e,
0xfb,0x92,0x67,0xd5,0xaa,0xef,0xc5,0xa2,0x9e,0xb5,0x7b,0xd3,
0xa3,0xd3,0x0d,0xdc,0x99,0x3f,0xa8,0xbc,0x0c,0xbd,0xf4,0xae,
0x69,0xfe,0x5d,0xff,0x32,0xbd,0xdb,0x52,0x25,0x0c,0xbb,0x76,
0x39,0xdf,0x17,0x53,0x09,0xd2,0x5e,0x9e,0x5d,0x33,0x67,0x3b,
0x2b,0xf3,0x83,0x67,0x0f,0xaa,0xa5,0x1b,0x96,0x76,0xca,0xf0,
0xff,0x9b,0x65,0x5d,0xe1,0xf3,0xef,0xf5,0x13,0x43,0xe7,0xec,
0x54,0x86,0x5d,0x27,0x5f,0x7f,0x94,0xf2,0x2d,0x58,0xfb,0xc4,
0x98,0xc1,0x71,0xf6,0x82,0x9d,0x4f,0xb6,0x5b,0x31,0x5c,0xcf,
0x6b,0x4a,0x9b,0x7c,0xff,0x15,0x43,0xcc,0x6e,0xce,0x59,0xbe,
0x75,0xaf,0x99,0x37,0x6c,0xe1,0x9c,0xe5,0x0f,0xa7,0xa7,0x31,
0xce,0xb8,0xcd,0x92,0x39,0x69,0x7e,0x2a,0xc3,0x33,0x33,0xc7,
0x59,0x4f,0xd2,0xa5,0x1b,0x8a,0x7d,0x27,0xe8,0xfd,0xbc,0xc9,
0xf6,0x20,0x46,0x78,0x89,0x77,0xdd,0x35,0x46,0x8b,0x9c,0xa6,
0x8f,0x8f,0x63,0xb7,0x3d,0xa9,0x96,0x69,0x58,0xf4,0xde,0x38,
0xd5,0xdb,0x6f,0xeb,0xb9,0xdc,0xa6,0x77,0x0f,0x54,0x13,0xde,
0x3e,0xbf,0x7e,0xfd,0xf9,0x89,0x93,0x0b,0x94,0x7f,0x09,0xb3,
0xa7,0xbf,0x55,0xbb,0xf1,0xe9,0x67,0xed,0x95,0xe8,0xf7,0xa9,
0xcb,0xed,0x2d,0xa4,0x1a,0x16,0xaa,0x25,0xaf,0xd8,0xee,0x5e,
0xab,0x1f,0x51,0xc9,0x73,0x6f,0x93,0xeb,0xa5,0xe5,0x4b,0xca,
0x3d,0xeb,0xb3,0x99,0x79,0x4c,0x1a,0xfa,0xd5,0x3c,0x66,0xd7,
0xf4,0xf3,0x5e,0x88,0x12,0xde,0xe1,0x57,0xd7,0xb2,0x9f,0x69,
0x91,0x79,0xe3,0xeb,0x27,0xd5,0x79,0x0d,0x2f,0x7c,0x05,0x94,
0x7e,0x4e,0xfc,0xc7,0x2f,0xb0,0x96,0xd3,0x49,0xc5,0xde,0x89,
0xd9,0x25,0xbb,0x29,0xe0,0x64,0xff,0x15,0x86,0xc0,0x59,0x0a,
0x21,0x9f,0x94,0x4d,0x1b,0xbe,0xab,0x71,0xcc,0xfc,0xd3,0xc1,
0xfb,0x60,0x2b,0xa7,0x93,0x9a,0x7d,0x12,0x73,0x45,0x76,0xd3,
0x85,0x93,0xfd,0x77,0x18,0xe2,0x66,0x29,0x94,0x7c,0x8a,0x96,
0x68,0x08,0xca,0xdf,0x6e,0xb1,0xd1,0xd8,0xee,0x5f,0xdc,0xff,
0x75,0x5f,0xb9,0x5f,0xc6,0x79,0xbc,0x55,0xfc,0xb0,0xad,0x7c,
0x52,0x9c,0xca,0xdf,0x89,0x5f,0xd6,0xbc,0x0d,0xff,0xc4,0xf3,
0xb5,0xbc,0x3f,0xf1,0x93,0xa5,0x3e,0xa3,0xf4,0xae,0xaf,0x46,
0xeb,0xd6,0xea,0x79,0xa4,0x32,0xf4,0xa9,0xdc,0x3f,0xcc,0x74,
0x6e,0xab,0x3e,0x90,0x39,0x47,0x6d,0xff,0x4a,0x35,0x83,0x49,
0xf3,0x77,0x73,0xf6,0x3c,0x79,0x9e,0xc7,0xa4,0xfc,0x73,0xe7,
0xec,0x03,0x1e,0x75,0xef,0x70,0x0a,0xe9,0x64,0x7e,0xe2,0xbf,
0xbf,0xbe,0xfc,0x34,0x77,0x50,0xac,0x69,0xe3,0xf1,0xed,0x5d,
0x77,0x95,0x7e,0x3e,0x4e,0xea,0xfb,0x18,0xf3,0x2f,0x6f,0x13,
0x6f,0xb6,0xb9,0xa3,0x60,0x38,0xfb,0xfd,0x33,0x33,0xfe,0x7c,
0x6f,0x66,0xd4,0xf8,0xb5,0xf3,0xd0,0x8a,0xd3,0x9b,0x9c,0x37,
0xf1,0x1e,0x58,0x99,0x1a,0xb3,0x36,0x76,0xc2,0x29,0x86,0x3f,
0xe9,0x9f,0x96,0xc7,0xeb,0xbb,0xb7,0x2d,0x4c,0x66,0xb8,0xe5,
0xf7,0x6f,0xe3,0x7b,0xef,0xab,0x2c,0xd3,0x6c,0x7e,0x9e,0xba,
0xc7,0xe2,0xf6,0xa9,0xd8,0xbc,0x71,0xe2,0x9f,0x3b,0xbe,0x09,
0x2a,0xf6,0xe5,0xc2,0x12,0x27,0xcf,0xdf,0x45,0x13,0xaa,0xa8,
0x59,0x7d,0xc3,0xfb,0x4d,0xb8,0xd7,0xbf,0x9d,0x6a,0x1a,0xe2,
0x79,0xda,0xea,0xcd,0x75,0x9e,0xe1,0x3b,0x3f,0x1c,0xf8,0x92,
0xa3,0x8d,0x2b,0x59,0x35,0x6c,0xab,0x61,0xf4,0x0b,0x15,0x5c,
0xed,0xa1,0xa4,0x95,0x0d,0xe2,0x7b,0xba,0xfa,0xb9,0xac,0x73,
0x4a,0x68,0x02,0x04,0x00,0x00,0xff,0xff,0x60,0x44,0xfa,0x5c,
0x5b,0x03,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}